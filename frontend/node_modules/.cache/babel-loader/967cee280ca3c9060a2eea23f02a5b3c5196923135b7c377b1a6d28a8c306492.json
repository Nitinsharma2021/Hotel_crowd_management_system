{"ast":null,"code":"import axios from 'axios';\n\n// Configure axios base URL - change this to your deployed API Gateway URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://6op1kbv0p2.execute-api.us-east-1.amazonaws.com/Prod';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// AI Agent API\nexport const aiAgentAPI = {\n  processRequest: prompt => api.post('/ai-agent', {\n    prompt\n  })\n};\n\n// Customer API\nexport const customerAPI = {\n  create: customerData => api.post('/customers', customerData),\n  get: id => api.get(`/customers/${id}`),\n  update: (id, updateData) => api.put(`/customers/${id}`, updateData)\n};\n\n// Restaurant API\nexport const restaurantAPI = {\n  create: restaurantData => api.post('/restaurants', restaurantData),\n  get: id => api.get(`/restaurants/${id}`)\n};\n\n// Table API\nexport const tableAPI = {\n  create: tableData => api.post('/tables', tableData),\n  list: restaurantId => api.get('/tables', {\n    params: {\n      restaurant_id: restaurantId\n    }\n  })\n};\n\n// Reservation API\nexport const reservationAPI = {\n  create: reservationData => api.post('/reservations', reservationData),\n  get: id => api.get(`/reservations/${id}`),\n  update: (id, updateData) => api.put(`/reservations/${id}`, updateData),\n  cancel: id => api.post(`/reservations/${id}/cancel`),\n  getAvailableTables: params => api.get('/reservations/available-tables', {\n    params\n  })\n};\n\n// Special Requests API\nexport const requestAPI = {\n  create: requestData => api.post('/requests', requestData)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","data","message","aiAgentAPI","processRequest","prompt","post","customerAPI","customerData","get","id","update","updateData","put","restaurantAPI","restaurantData","tableAPI","tableData","list","restaurantId","params","restaurant_id","reservationAPI","reservationData","cancel","getAvailableTables","requestAPI","requestData"],"sources":["C:/Users/hp/Desktop/CGhacthon/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configure axios base URL - change this to your deployed API Gateway URL\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://6op1kbv0p2.execute-api.us-east-1.amazonaws.com/Prod';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('API Request:', config.method?.toUpperCase(), config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// AI Agent API\r\nexport const aiAgentAPI = {\r\n  processRequest: (prompt) => api.post('/ai-agent', { prompt }),\r\n};\r\n\r\n// Customer API\r\nexport const customerAPI = {\r\n  create: (customerData) => api.post('/customers', customerData),\r\n  get: (id) => api.get(`/customers/${id}`),\r\n  update: (id, updateData) => api.put(`/customers/${id}`, updateData),\r\n};\r\n\r\n// Restaurant API\r\nexport const restaurantAPI = {\r\n  create: (restaurantData) => api.post('/restaurants', restaurantData),\r\n  get: (id) => api.get(`/restaurants/${id}`),\r\n};\r\n\r\n// Table API\r\nexport const tableAPI = {\r\n  create: (tableData) => api.post('/tables', tableData),\r\n  list: (restaurantId) => api.get('/tables', { params: { restaurant_id: restaurantId } }),\r\n};\r\n\r\n// Reservation API\r\nexport const reservationAPI = {\r\n  create: (reservationData) => api.post('/reservations', reservationData),\r\n  get: (id) => api.get(`/reservations/${id}`),\r\n  update: (id, updateData) => api.put(`/reservations/${id}`, updateData),\r\n  cancel: (id) => api.post(`/reservations/${id}/cancel`),\r\n  getAvailableTables: (params) => api.get('/reservations/available-tables', { params }),\r\n};\r\n\r\n// Special Requests API\r\nexport const requestAPI = {\r\n  create: (requestData) => api.post('/requests', requestData),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}